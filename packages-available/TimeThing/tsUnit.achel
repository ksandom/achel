# Choose a subset of results based on a number of units ago. --tsUnit=startNumberOfUnitsAgo,[howManyUnitsToTake],[fieldToDecideOn][,unit] . Unit can be day(default), week ~ time

# Set the default field
if ~!Global,tsUnit-2!~,!=,,
	set Tmp,timeField,~!Global,tsUnit-2!~
else
	set Tmp,timeField,start

if ~!Global,tsUnit-3!~,!=,,
	set Tmp,unit,~!Global,tsUnit-3!~
else
	set Tmp,unit,day


# Figure out the base
debug 2,tsUnit: unit ~!Tmp,unit!~
now Tmp,now
if ~!Tmp,unit!~,==,day,
	strToTime Tmp,base,0:00:00,~!Tmp,now!~

if ~!Tmp,unit!~,==,week,
	now Local,now
	fullTimeStamp Local,day,~!Local,now!~,l
	if ~!Local,day!~,==,Monday,
		strToTime Tmp,base,monday,~!Tmp,base!~
	else
		strToTime Tmp,base,last monday,~!Tmp,base!~

# Start the results
strToTime Tmp,start,-~!Global,tsUnit-0!~ ~!Tmp,unit!~,~!Tmp,base!~

# We need to subtract one so that we include midnight
basicMaths Tmp,start,~!Tmp,start!~,-,1
fullTimeStamp Tmp,tsStart,~!Tmp,start!~
newer ~!Tmp,timeField!~,~!Tmp,start!~

# Stop the results
if ~!Global,tsUnit-1!~,!=,,
	strToTime Tmp,stop,+~!Global,tsUnit-1!~ ~!Tmp,unit!~,~!Tmp,start!~
else
	strToTime Tmp,stop,+1 ~!Tmp,unit!~,~!Tmp,start!~
fullTimeStamp Tmp,tsStop,~!Tmp,stop!~
older ~!Tmp,timeField!~,~!Tmp,stop!~

debug 2,tsUnit: Range ~!Tmp,tsStart!~  -  ~!Tmp,tsStop!~
debug 3,tsUnit:   (absolute)   ~!Tmp,start!~  -  ~!Tmp,stop!~


# Spit out some debugging.
fullTimeStamp Local,timestamp,~!Tmp,base!~
debug 1,base: 	~!Tmp,base!~ (~!Local,timestamp!~)
fullTimeStamp Local,timestamp,~!Tmp,start!~
debug 1,start: 	~!Tmp,start!~ (~!Local,timestamp!~)
fullTimeStamp Local,timestamp,~!Tmp,stop!~
debug 1,stop: 	~!Tmp,stop!~ (~!Local,timestamp!~)


# Clean up
unset Tmp,now
unset Tmp,base
unset Tmp,start
unset Tmp,stop
unset Tmp,timeField
unset Tmp,unit
