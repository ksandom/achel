# Define a unit test. --defineTest=description, . Code to be tested should be nested and --passTest, --failTest or --warnTest should be included in that logic. Description MUST be unique to the test. ~ unit
parameters description,featureName

debug 1,defineTest: Begin test "~!Local,description!~"
set Local,defineTest-description,~!Local,description!~

if ~!Local,featureName!~,!=,,
	callFeatureNoReturn ~!Local,featureName!~
else
	failTest There doesn't appear to be any code for this test. Check that the defineTest line ends in a comma.

if ~!UnitResults,currentResult!~,==,pass,
	pass
elseIf ~!UnitResults,currentResult!~,==,fail,
	pass
elseIf ~!UnitResults,currentResult!~,==,warn,
	pass
else
	set UnitResults,currentResult,unknown
	set UnitResults,currentComment,The test either did not return a result using --passTest, --failTest or --warnTest. Or it returned an unexpected result.

basicMaths UnitResults,~!UnitResults,currentResult!~,~!UnitResults,~!UnitResults,currentResult!~!~,+,1

setNested UnitResults,results,~!Local,description!~,description,~!Local,description!~
setNested UnitResults,results,~!Local,description!~,result,~!UnitResults,currentResult!~
setNested UnitResults,results,~!Local,description!~,resultComment,~!UnitResults,currentComment!~
setNested UnitResults,results,~!Local,description!~,resultColor,~!UnitResults,currentColor!~
setNested ["UnitResults","results","~!Local,description!~","stackTrace",~!UnitResults,currentStackTrace!~]



resetTest
unset Local,defineTest-description

debug 2,defineTest: End test "~!Local,description!~"
