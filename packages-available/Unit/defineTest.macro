# Define a unit test. --defineTest=description, . Code to be tested should be nested and --passTest, --failTest or --warnTest should be included in that logic. Description MUST be unique to the test. ~ unit
parameters description,featureName

set Tmp,defineTest-description,~!Local,description!~
escape Local,escapedDescription,~!Local,description!~
debug 1,defineTest: Begin test "~!Local,description!~" key="~!Local,escapedDescription!~"

if ~!Local,featureName!~,!=,,
	callFeatureNoReturn ~!Local,featureName!~
else
	failTest There doesn't appear to be any code for this test. Check that the defineTest line ends in a comma.

if ~!UnitResults,currentResult!~,==,pass,
	pass
elseIf ~!UnitResults,currentResult!~,==,fail,
	pass
elseIf ~!UnitResults,currentResult!~,==,warn,
	pass
else
	set UnitResults,currentResult,unknown
	set UnitResults,currentComment,The test either did not return a result using --passTest, --failTest or --warnTest. Or it returned an unexpected result.

basicMaths UnitResults,~!UnitResults,currentResult!~,~!UnitResults,~!UnitResults,currentResult!~!~,+,1

escape Local,escapedComment,~!UnitResults,currentComment!~

setNested ["UnitResults","results","~!Local,escapedDescription!~","description","~!Local,escapedDescription!~"]
setNested ["UnitResults","results","~!Local,escapedDescription!~","result","~!UnitResults,currentResult!~"]
setNested ["UnitResults","results","~!Local,escapedDescription!~","resultComment","~!Local,escapedComment!~"]
setNested ["UnitResults","results","~!Local,escapedDescription!~","resultColor","~!UnitResults,currentColor!~"]
setNested ["UnitResults","results","~!Local,escapedDescription!~","stackTrace",~!UnitResults,currentStackTrace!~]



resetTest
unset Local,defineTest-description

debug 2,defineTest: End test "~!Local,description!~"
