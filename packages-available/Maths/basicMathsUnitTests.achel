# Unit tests for basicMaths features ~ unitTest,hidden,maths

defineTest Round 1 - 0,
	round Tmp,roundTest,1,0
	if ~!Tmp,roundTest!~,==,1,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 1 - 1,
	round Tmp,roundTest,1,1
	if ~!Tmp,roundTest!~,==,1,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 5 - 1,
	round Tmp,roundTest,5,1
	if ~!Tmp,roundTest!~,==,5,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 5 - -1,
	round Tmp,roundTest,5,-1
	if ~!Tmp,roundTest!~,==,10,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 123 - -1,
	round Tmp,roundTest,123,-1
	if ~!Tmp,roundTest!~,==,120,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 153 - -2,
	round Tmp,roundTest,153,-2
	if ~!Tmp,roundTest!~,==,200,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.1 - 1,
	round Tmp,roundTest,0.1,1
	if ~!Tmp,roundTest!~,==,0.1,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.1 - 0,
	round Tmp,roundTest,0.1,0
	if ~!Tmp,roundTest!~,==,0,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.5 - 0,
	round Tmp,roundTest,0.5,0
	if ~!Tmp,roundTest!~,==,1,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.005 - 0,
	round Tmp,roundTest,0.005,0
	if ~!Tmp,roundTest!~,==,0,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.005 - 1,
	round Tmp,roundTest,0.005,1
	if ~!Tmp,roundTest!~,==,0,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.005 - 2,
	round Tmp,roundTest,0.005,2
	if ~!Tmp,roundTest!~,==,0.01,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

defineTest Round 0.005 - 3,
	round Tmp,roundTest,0.005,3
	if ~!Tmp,roundTest!~,==,0.005,
		passTest got expected value.
	else
		failTest got ~!Tmp,roundTest!~.

unset Tmp,roundTest



defineTest 2 squared,
	basicMaths Tmp,square,2,^,2
	expect 4,~!Tmp,square!~

defineTest square root of 4,
	basicMaths Tmp,square,4,sr,2
	expect 2,~!Tmp,square!~

unset Tmp,square


defineTest 5%4,
	basicMaths Tmp,mod,5,%,4
	expect 1,~!Tmp,mod!~

defineTest 5.2%4,
	basicMaths Tmp,mod,5.2,%,4
	expect 1.2,~!Tmp,mod!~

unset Tmp,mod


defineTest absolute 2,
	absolute Tmp,absolute,2
	expect 2,~!Tmp,absolute!~

defineTest absolute -2,
	absolute Tmp,absolute,-2
	expect 2,~!Tmp,absolute!~

unset Tmp,absolute



defineTest Iterator 1-10 inclusive - Step 1,
	clear
	iterator 1,1,10
	countToVar Tmp,iterations
	expect 10,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 0-10 inclusive - Step 0.1,
	clear
	iterator 0,0.1,10
	countToVar Tmp,iterations
	expect 101,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 1-10 inclusive - Step 2,
	clear
	iterator 1,2,10
	countToVar Tmp,iterations
	expect 5,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 10-1 inclusive - Step -1,
	clear
	iterator 10,-1,1
	countToVar Tmp,iterations
	expect 10,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 10-0 inclusive - Step -0.1,
	clear
	iterator 10,-0.1,0
	countToVar Tmp,iterations
	expect 101,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 1-10 inclusive - Step 0 (invalid incrementor),
	clear
	iterator 1,0,10
	countToVar Tmp,iterations
	expect 1,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 1-0 inclusive - Step 1 (incrementor is in the wrong direction),
	clear
	iterator 1,1,0
	countToVar Tmp,iterations
	expect 1,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator 1- (missing stop) inclusive - Step 1,
	clear
	iterator 1,1,
	countToVar Tmp,iterations
	expect 1,~!Tmp,iterations!~

	unset Tmp,iterations

defineTest Iterator -10 (missing start) inclusive - Step 1,
	clear
	iterator ,1,10
	countToVar Tmp,iterations
	expect 1,~!Tmp,iterations!~

	unset Tmp,iterations


