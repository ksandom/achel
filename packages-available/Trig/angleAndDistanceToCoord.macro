# Take an angle (in radians) and a distance and calcuate the x,y co-ordinates from 0,0. --angleAndDistanceToCoord=Category,variable,angle,distance ~ trig,coord
parameters category,coordVariable,angle,distance

# TODO work out why Me doesn't work in place of Tmp.
pi Tmp,pi
piBy Tmp,0.5Pi,0.5
piBy Tmp,1.5Pi,1.5

if ~!Me,distance!~,==,0,
	setNested ~!Me,category!~,~!Me,coordVariable!~,x,0
	setNested ~!Me,category!~,~!Me,coordVariable!~,y,0
elseIf ~!Me,distance!~,<,0,
	setNested ~!Me,category!~,~!Me,coordVariable!~,x,undef
	setNested ~!Me,category!~,~!Me,coordVariable!~,y,undef
else
	if ~!Me,angle!~,==,0,
		# up
		setNested ~!Me,category!~,~!Me,coordVariable!~,x,0
		setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Me,distance!~
		
	elseIf ~!Me,angle!~,==,~!Tmp,0.5Pi!~,
		# right
		setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Me,distance!~
		setNested ~!Me,category!~,~!Me,coordVariable!~,y,0
		
	elseIf ~!Me,angle!~,==,~!Tmp,pi!~,
		# down
		basicMaths Tmp,flipped,~!Me,distance!~,*,-1
		setNested ~!Me,category!~,~!Me,coordVariable!~,x,0
		setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Tmp,flipped!~
		
	elseIf ~!Me,angle!~,==,~!Tmp,1.5Pi!~,
		# left
		basicMaths Tmp,flipped,~!Me,distance!~,*,-1
		setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Tmp,flipped!~
		setNested ~!Me,category!~,~!Me,coordVariable!~,y,0
		
	else
		if ~!Me,angle!~,<,~!Tmp,0.5Pi!~,
			# top right
			
			rightTriangleGetOppositeFromAngle Tmp,opposite,~!Me,angle!~,~!Me,distance!~
			rightTriangleGetAdjacentFromAngle Tmp,adjacent,~!Me,angle!~,~!Me,distance!~
			
			setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Tmp,opposite!~
			setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Tmp,adjacent!~
			
		elseIf ~!Me,angle!~,<,~!Tmp,pi!~,
			# bottom right
			basicMaths Tmp,angle,~!Me,angle!~,-,~!Tmp,0.5Pi!~
			rightTriangleGetOppositeFromAngle Tmp,opposite,~!Tmp,angle!~,~!Me,distance!~
			rightTriangleGetAdjacentFromAngle Tmp,adjacent,~!Tmp,angle!~,~!Me,distance!~
			
			basicMaths Tmp,opposite,~!Tmp,opposite!~,*,-1
			setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Tmp,opposite!~
			setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Tmp,adjacent!~
			
			
		elseIf ~!Me,angle!~,<,~!Tmp,1.5Pi!~,
			# bottom left
			basicMaths Tmp,angle,~!Me,angle!~,-,~!Tmp,pi!~
			rightTriangleGetOppositeFromAngle Tmp,opposite,~!Tmp,angle!~,~!Me,distance!~
			rightTriangleGetAdjacentFromAngle Tmp,adjacent,~!Tmp,angle!~,~!Me,distance!~
			
			basicMaths Tmp,opposite,~!Tmp,opposite!~,*,-1
			basicMaths Tmp,adjacent,~!Tmp,adjacent!~,*,-1
			
			setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Tmp,opposite!~
			setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Tmp,adjacent!~
			
		else
			# top left
			basicMaths Tmp,angle,~!Me,angle!~,-,~!Tmp,1.5Pi!~
			rightTriangleGetOppositeFromAngle Tmp,opposite,~!Tmp,angle!~,~!Me,distance!~
			rightTriangleGetAdjacentFromAngle Tmp,adjacent,~!Tmp,angle!~,~!Me,distance!~
			
			basicMaths Tmp,adjacent,~!Tmp,adjacent!~,*,-1
			
			setNested ~!Me,category!~,~!Me,coordVariable!~,y,~!Tmp,opposite!~
			setNested ~!Me,category!~,~!Me,coordVariable!~,x,~!Tmp,adjacent!~
			

