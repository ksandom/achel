# Take an angle (in radians) and a distance and calcuate the x,y co-ordinates from 0,0. --angleAndDistanceToCoord=Category,variable,angle,distance ~ trig,coord
parameters category,coordVariable,angle,distance

pi Local,pi
piBy Local,0.5Pi,0.5
piBy Local,1.5Pi,1.5
piBy Tmp,1.5Pi,1.5

debug 1,angleAndDistanceToCoord: 1=~!Local,pi!~ 0.5=~!Local,0.5Pi!~ 1.5=~!Local,1.5Pi!~

if ~!Local,distance!~,==,0,
	setNested ~!Local,category!~,~!Local,coordVariable!~,x,0
	setNested ~!Local,category!~,~!Local,coordVariable!~,y,0
elseIf ~!Local,distance!~,<,0,
	setNested ~!Local,category!~,~!Local,coordVariable!~,x,undef
	setNested ~!Local,category!~,~!Local,coordVariable!~,y,undef
else
	if ~!Local,angle!~,==,0,
		# up
		setNested ~!Local,category!~,~!Local,coordVariable!~,x,0
		setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,distance!~
		
	elseIf ~!Local,angle!~,==,~!Local,0.5Pi!~,
		# right
		setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,distance!~
		setNested ~!Local,category!~,~!Local,coordVariable!~,y,0
		
	elseIf ~!Local,angle!~,==,~!Local,pi!~,
		# down
		basicMaths Local,flipped,~!Local,distance!~,*,-1
		setNested ~!Local,category!~,~!Local,coordVariable!~,x,0
		setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,flipped!~
		
	elseIf ~!Local,angle!~,==,~!Local,1.5Pi!~,
		# left
		basicMaths Local,flipped,~!Local,distance!~,*,-1
		setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,flipped!~
		setNested ~!Local,category!~,~!Local,coordVariable!~,y,0
		
	else
		if ~!Local,angle!~,<,~!Local,0.5Pi!~,
			# top right
			
			rightTriangleGetOppositeFromAngle Local,opposite,~!Local,angle!~,~!Local,distance!~
			rightTriangleGetAdjacentFromAngle Local,adjacent,~!Local,angle!~,~!Local,distance!~
			
			setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,opposite!~
			setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,adjacent!~
			
		elseIf ~!Local,angle!~,<,~!Local,pi!~,
			# bottom right
			basicMaths Local,angle,~!Local,angle!~,-,~!Local,0.5Pi!~
			rightTriangleGetOppositeFromAngle Local,opposite,~!Local,angle!~,~!Local,distance!~
			rightTriangleGetAdjacentFromAngle Local,adjacent,~!Local,angle!~,~!Local,distance!~
			
			basicMaths Local,opposite,~!Local,opposite!~,*,-1
			setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,opposite!~
			setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,adjacent!~
			
			
		elseIf ~!Local,angle!~,<,~!Local,1.5Pi!~,
			# bottom left
			basicMaths Local,angle,~!Local,angle!~,-,~!Local,pi!~
			rightTriangleGetOppositeFromAngle Local,opposite,~!Local,angle!~,~!Local,distance!~
			rightTriangleGetAdjacentFromAngle Local,adjacent,~!Local,angle!~,~!Local,distance!~
			
			basicMaths Local,opposite,~!Local,opposite!~,*,-1
			basicMaths Local,adjacent,~!Local,adjacent!~,*,-1
			
			setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,opposite!~
			setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,adjacent!~
			
		else
			# top left
			basicMaths Local,angle,~!Local,angle!~,-,~!Local,1.5Pi!~
			rightTriangleGetOppositeFromAngle Local,opposite,~!Local,angle!~,~!Local,distance!~
			rightTriangleGetAdjacentFromAngle Local,adjacent,~!Local,angle!~,~!Local,distance!~
			
			basicMaths Local,adjacent,~!Local,adjacent!~,*,-1
			
			setNested ~!Local,category!~,~!Local,coordVariable!~,y,~!Local,opposite!~
			setNested ~!Local,category!~,~!Local,coordVariable!~,x,~!Local,adjacent!~
			

