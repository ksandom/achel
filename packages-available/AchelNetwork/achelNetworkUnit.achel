# Unit tests for achelNetwork ~ network,unitTest,hidden,dev

pass defineTest network - revisit before using,
	failTest This needs to be checked more fully.

pass defineTest network - can send/recieve message while binding to 127.0.0.1,
	# create a listener
	setTestType legacy
	createSocketServerFaucet serverSocket,achelNetworkUnitConnect,achelNetworkUnitDisconnect,,12345,127.0.0.1
	deliver serverSocket,_control,inEOL n
	deliver serverSocket,_control,outEOL n
	createNullFaucet null
	createPipe serverSocket,null

	# create a destination
	createSemiInlineCallFaucet destination,achelNetworkUnitDestination,
	createPipe destination,null

	# create a client connection
	createSocketClientFaucet clientSocket,,,,12345,127.0.0.1
	deliver clientSocket,_control,inEOL n
	deliver clientSocket,_control,outEOL n

	# Make sure the server know about the connection. The server socket only checks for new connections when it it polled for new data. We normally wouldn't have to worry about this because the timer would get it. But because we are running this test non-interruptable, we have to invoke the deliverAll.
	deliverAll

	# send something through
	deliver clientSocket,default,correctValue

	# invoke delivery
	deliverAll

	# test that it arrived
	if ~!UnitNetwork,destination!~,==,,
		failTest Got no value.
	elseIf ~!UnitNetwork,destination!~,==,correctValue,
		passTest Got correct value.
	else
		failTest Got incorrect value "~!UnitNetwork,destination!~".

	# Clean up
	unset UnitNetwork,destination
	deleteFaucet serverSocket
	deleteFaucet clientSocket
	deleteFaucet destination
	deleteFaucet null
	deliverAll

defineFaucetTestSet
	defineFaucetTest network - simpleFaucet - simpler forward,
		createSimpleNetworkServerFaucet server1,localhost,22006
		createSimpleNetworkClientFaucet client1,localhost,22006
		createTestFaucet result1,Should get simpler string,expect,simpler

		createPipe .,server1
		createPipe client1,result1
		createPipe result1,.

		# Anchor so it gets polled.
		createPipe server1,.

		deliver server1,,simpler

	defineFaucetTest network - simpleFaucet - simpler reverse,
		createSimpleNetworkServerFaucet server1,localhost,22005
		createSimpleNetworkClientFaucet client1,localhost,22005

		createTestFaucet result1,Should get simplerR string,expect,simplerR

		createPipe .,client1
		createPipe .,server1
		createPipe server1,result1
		createPipe result1,.

		# Anchor so it gets polled.
		createPipe client1,.

		deliver client1,,simplerR

	defineFaucetTest network - simpleFaucet - basic nested single in a metafaucet - forward,
		createMetaFaucet nested,
			createSimpleNetworkServerFaucet server1,localhost,22007
			createSimpleNetworkClientFaucet client1,localhost,22007
			createTestFaucet result1,Should get forward string,expect,forward

			createPipe .,server1
			createPipe client1,result1
			createPipe result1,.

			# Anchor so it gets polled.
			createPipe server1,.

		createPipe .,nested,*,*
		createPipe nested,.,*,*

		deliver nested,,forward

	defineFaucetTest network - simpleFaucet - basic nested single in separate metafaucets,
		createMetaFaucet nestedServer,
			createSimpleNetworkServerFaucet server1,localhost,22008,pass
			createPipe .,server1

			# Anchor so it gets polled.
			createPipe server1,.

		createMetaFaucet nestedClient,
			createSimpleNetworkClientFaucet client1,localhost,22008,pass
			createTestFaucet result1,Should get forward string,expect,wheeeeee

			createPipe client1,result1
			createPipe result1,.

		createPipe .,nested,*,*
		createPipe nestedClient,.,*,*
		createPipe nestedServer,.,*,*

		deliver nestedServer,,wheeeeee

