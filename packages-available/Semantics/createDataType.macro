# Create a data type. action is the command that should be run with the appropriate value (defined in default, more and less). --createDataType=typeName,default,[more],[less],[action],description ~ data,definition,semantics

# TODO Document this further.

set DefineDataType,dataTypeName,~!Global,createDataType-0!~
set DefineDataType,defaultTemplate,~!Global,createDataType-1!~
set DefineDataType,moreTemplate,~!Global,createDataType-2!~
set DefineDataType,lessTemplate,~!Global,createDataType-3!~
set DefineDataType,action,~!Global,createDataType-4!~
set DefineDataType,description,~!Global,createDataType-5!~

# Apply defaults if necessary
setIfNothing DefineDataType,moreTemplate,~!DefineDataType,defaultTemplate!~
setIfNothing DefineDataType,lessTemplate,~!DefineDataType,defaultTemplate!~
setIfNothing DefineDataType,action,templateOut

# Load the collection if it has not been loaded already
retrieveResults Semantics,dataTypes
notIfResult loadStoreVariableFromFile loadStoreFromData Semantics

# Set the details and cleanup
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,dataTypeName,~!DefineDataType,dataTypeName!~
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,default,~!DefineDataType,defaultTemplate!~
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,more,~!DefineDataType,moreTemplate!~
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,less,~!DefineDataType,lessTemplate!~
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,action,~!DefineDataType,action!~
setNested Semantics,dataTypes,~!DefineDataType,dataTypeName!~,description,~!DefineDataType,description!~

unsetCategory DefineDataType

retrieveResults Semantics,dataTypes

# Save the result out
registerForEvent Mass,finishGeneral,saveSemantics
