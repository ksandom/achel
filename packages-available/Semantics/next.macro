# If there is only one possible next step, do that. Otherwise display --whatNext . IMPORTANT This is a convenience macro that may not always give the results you expect (e.g. someone has different packages installed to you), therefore you should never use it for writing other macros.  ~ Semantics,convenience
#onDefine aliasFeature next,n

# Save current resultSet and dataType
stashResults SemanticsState,results
retrieveResults SemanticsState,currentDataType
stashResults SemanticsState,tmpDataType

# Find out what we can do with this data type
whatNext
countToVar SemanticsState,nextCount
stashResults SemanticsState,semanticsResults

# Restore the resultSet and dataType
retrieveResults SemanticsState,tmpDataType
stashResults SemanticsState,currentDataType
retrieveResults SemanticsState,results

# Clean up
# TODO the problem is here
unset SemanticsState,results
unset SemanticsState,tmpDataType

# Chose what we are going to do with this knowledge
if ~!SemanticsState,nextCount!~,==,0,debug,0,No known features that definitely fit this output. I suggest querying --help.
if ~!SemanticsState,nextCount!~,==,1,~!SemanticsState,semanticsResults,0,name!~
else pass
	debug 0,There's more than one known feature you can use with this output. They are:
	whatNext
